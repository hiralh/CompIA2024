/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.edutrack2;

//This is a JFrame for the student information page.
import java.sql.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class studentInfo extends javax.swing.JFrame {

    Connection conn;
    public static dashboard dash;
    public static studentInfoEditor stuEditor;
    public static studentInfo DEBUG;
    static DefaultListModel mod= new DefaultListModel();
    public static String selectedStudentName= null;
    public studentInfo(Connection conn) throws SQLException {
        //connection received
        this.conn= conn;
        initComponents();
        //studentList is assigned to a list model
        studentList.setModel(mod);
        mod.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        informationPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        schoolNameLabel = new javax.swing.JLabel();
        curriculumLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        parentNameLabel = new javax.swing.JLabel();
        parentEmailLabel = new javax.swing.JLabel();
        parentPhoneLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        edit = new javax.swing.JButton();
        home = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        parentPhone = new javax.swing.JLabel();
        curriculum = new javax.swing.JLabel();
        parentEmail = new javax.swing.JLabel();
        parentName = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        schoolName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        viewList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Microsoft Himalaya", 1, 24)); // NOI18N
        jLabel2.setText("CLASSES");

        add.setBackground(new java.awt.Color(0, 0, 0));
        add.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("-");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        informationPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Microsoft Himalaya", 1, 24)); // NOI18N
        jLabel1.setText("STUDENT INFORMATION");

        nameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        nameLabel.setText("Name:");

        ageLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        ageLabel.setText("Age:");

        schoolNameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        schoolNameLabel.setText("School Name:");

        curriculumLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        curriculumLabel.setText("Curriculum:");

        gradeLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        gradeLabel.setText("Grade:");

        emailLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        emailLabel.setText("Email:");

        parentNameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentNameLabel.setText("Parent Name:");

        parentEmailLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentEmailLabel.setText("Parent Email:");

        parentPhoneLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentPhoneLabel.setText("Parent Phone:");

        addressLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        addressLabel.setText("Address:");

        edit.setBackground(new java.awt.Color(0, 0, 0));
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        home.setBackground(new java.awt.Color(0, 0, 0));
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("HOME");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        age.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        address.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        parentPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        curriculum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        parentEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        parentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        email.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        grade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        schoolName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentNameLabel)
                            .addComponent(emailLabel)
                            .addComponent(gradeLabel)
                            .addComponent(curriculumLabel))
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(curriculum, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(parentName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(grade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addComponent(schoolNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(schoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addComponent(parentEmailLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(parentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(parentPhoneLabel)
                                    .addComponent(addressLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(parentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLabel)
                            .addComponent(nameLabel))
                        .addGap(54, 54, 54)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(home)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(schoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(schoolNameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(curriculumLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(curriculum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gradeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(grade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(parentName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addComponent(parentEmailLabel)
                                .addGap(18, 18, 18)
                                .addComponent(parentPhoneLabel))
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addComponent(parentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(parentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addressLabel)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                        .addComponent(edit)
                        .addContainerGap())))
        );

        studentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        studentList.setName(""); // NOI18N
        studentList.setSelectionForeground(new java.awt.Color(51, 255, 51));
        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(studentList);

        viewList.setBackground(new java.awt.Color(0, 0, 0));
        viewList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewList.setForeground(new java.awt.Color(255, 255, 255));
        viewList.setText("VIEW");
        viewList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(viewList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewList, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                    .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    //When the + button is pressed,
    private void addActionPerformed(java.awt.event.ActionEvent evt) {                                    
        //enter name of student to be added
        String newStudentName = JOptionPane.showInputDialog("Enter the new student's name:");
        if (newStudentName != null && !newStudentName.isEmpty()) {
            try {
                //add student name to database
                String query = "INSERT INTO studentInfo (sName) VALUES (?)";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, newStudentName);
                pstmt.executeUpdate();
                
                //add student to list
                mod.addElement(newStudentName);
                JOptionPane.showMessageDialog(this, "Refresh the list.");
       
            } catch (SQLException ex) {
                Logger.getLogger(studentInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }                                   

    //When the edit button is pressed,
    private void editActionPerformed(java.awt.event.ActionEvent evt) {                                     
        //retrieve name of selected student from the student list
        selectedStudentName = studentList.getSelectedValue();
        //open editor for that student
        openStudentInfoEditor(selectedStudentName);
    }                                    

    //When the home button is pressed,
    private void homeActionPerformed(java.awt.event.ActionEvent evt) {                                     
        this.setVisible(false); //student information page closed
        dash= new dashboard(conn);
        dash.setVisible(true); //dashboard page shown
    }                                    

    //When a student's name has been selected from the student list,
    private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {                                         
        if (!evt.getValueIsAdjusting()) {
            //retireve name of selected student from the student list
            selectedStudentName = studentList.getSelectedValue();
            if (selectedStudentName != null && !selectedStudentName.isEmpty()) {
                 try {
                //create a SQL query to retrieve the current details of the selected student from the database
                String query = "SELECT sName, age, schoolName, curriculum, grade, email, pName, pEmail, pPhone, address FROM studentInfo WHERE sName = ?";
                try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                    pstmt.setString(1, selectedStudentName);
                    try (ResultSet rs = pstmt.executeQuery()) {
                        //display the retrieved details on the JPanel called 'informationPanel'
                        if (rs.next()) {
                            name.setText(rs.getString("sName"));
                            age.setText(Integer.toString(rs.getInt("age")));
                            schoolName.setText(rs.getString("schoolName"));
                            curriculum.setText(rs.getString("curriculum"));
                            grade.setText(rs.getString("grade"));
                            email.setText(rs.getString("email"));
                            parentName.setText(rs.getString("pName"));
                            parentEmail.setText(rs.getString("pEmail"));
                            parentPhone.setText(rs.getString("pPhone"));
                            address.setText(rs.getString("address"));
                        }
                    }
                }
   
            } catch (SQLException e) {
            }
        }
        }
    }                                        

    //When the - button is pressed,
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        //enter name of student to be deleted
        selectedStudentName = JOptionPane.showInputDialog("Enter the student's name to delete:");
        if (selectedStudentName != null && !selectedStudentName.isEmpty()) {
            try {
                //create a SQL query to check if the student exists in the database
                String query = "SELECT * FROM studentInfo WHERE sName = ?";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, selectedStudentName);
                ResultSet rs = pstmt.executeQuery();

                if (rs.next()) {
                    //if student exists, delete the record from the tasks table in database
                    query = "DELETE FROM tasks WHERE sName = ?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, selectedStudentName);
                    pstmt.executeUpdate();

                    //delete from files table
                    query = "DELETE FROM files WHERE sName = ?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, selectedStudentName);
                    pstmt.executeUpdate();

                    //delete from fees table
                    query = "DELETE FROM fees WHERE sName = ?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, selectedStudentName);
                    pstmt.executeUpdate();

                    //delete from meetingRecords table
                    query = "DELETE FROM meetingRecords WHERE sName = ?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, selectedStudentName);
                    pstmt.executeUpdate();

                    //delete from studentInfo table
                    query = "DELETE FROM studentInfo WHERE sName = ?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, selectedStudentName);
                    pstmt.executeUpdate();

                // Remove student from the JList called 'studentList'
                JOptionPane.showMessageDialog(this, "Student '" + selectedStudentName + "' deleted successfully.");
                mod.removeElement(selectedStudentName);
                } else {
                    // If student doesn't exist, show an error message
                    JOptionPane.showMessageDialog(this, "No student found with the name '" + selectedStudentName + "'.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(studentInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }                                      

    //When view button is pressed,
    private void viewListActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //list model is cleared in case any names are being displayed
        mod.clear();
        try {
            //all student names currently registered are retrieved
            try (Statement stmt = conn.createStatement()) {
                ResultSet rs = stmt.executeQuery("SELECT sName FROM studentInfo");
                
                //all student names retrieved in ResultSet rs are added to list model
                while (rs.next()) {
                    String studentName = rs.getString("sName");
                    mod.addElement(studentName);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Failed to load student names.", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                        

    private void openStudentInfoEditor(String sName) {
        if (sName != null && !sName.isEmpty()) {
            try {
                //retrieving current student details from the database
                String query = "SELECT sName, age, schoolName, curriculum, grade, email, pName, pEmail, pPhone, address FROM studentInfo WHERE sName = ?";
                try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                    pstmt.setString(1, selectedStudentName);

                    try (ResultSet rs = pstmt.executeQuery()) {
                        if (rs.next()) {
                            stuEditor = new studentInfoEditor(conn);
                            this.setVisible(false); //closing student information page
                            stuEditor.setVisible(true); //opening student information editor page
                            //setting student information editor with current details from database
                            stuEditor.setStudentDetails(rs.getString("sName"), rs.getInt("age"), rs.getString("schoolName"), rs.getString("curriculum"), rs.getString("grade"), rs.getString("email"), rs.getString("pName"), rs.getString("pEmail"), rs.getString("pPhone"), rs.getString("address"));
                        } else {
                            JOptionPane.showMessageDialog(this, "No student found with the name '" +sName + "'.");
                        }
                    }
                }
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Failed to load student details.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>*/

    // Variables declaration - do not modify                     
    private javax.swing.JButton add;
    private javax.swing.JLabel address;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel age;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel curriculum;
    private javax.swing.JLabel curriculumLabel;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel grade;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JButton home;
    private javax.swing.JPanel informationPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel parentEmail;
    private javax.swing.JLabel parentEmailLabel;
    private javax.swing.JLabel parentName;
    private javax.swing.JLabel parentNameLabel;
    private javax.swing.JLabel parentPhone;
    private javax.swing.JLabel parentPhoneLabel;
    private javax.swing.JLabel schoolName;
    private javax.swing.JLabel schoolNameLabel;
    private javax.swing.JList<String> studentList;
    private javax.swing.JButton viewList;
    // End of variables declaration                   
}