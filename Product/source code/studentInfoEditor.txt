/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.edutrack2;

//This is a JFrame for the student information editor page.
import static com.mycompany.edutrack2.studentInfo.selectedStudentName;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class studentInfoEditor extends javax.swing.JFrame {

    Connection conn;
    public static studentInfo stu;
    public studentInfoEditor(Connection conn) {
        //connection received
        this.conn= conn;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        schoolNameLabel = new javax.swing.JLabel();
        curriculumLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        parentNameLabel = new javax.swing.JLabel();
        parentEmailLabel = new javax.swing.JLabel();
        parentPhoneLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        schoolName = new javax.swing.JTextField();
        curriculum = new javax.swing.JTextField();
        grade = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        parentName = new javax.swing.JTextField();
        parentEmail = new javax.swing.JTextField();
        parentPhone = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        exit = new javax.swing.JButton();
        DONE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        nameLabel.setText("Name:");

        ageLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        ageLabel.setText("Age:");

        schoolNameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        schoolNameLabel.setText("School Name:");

        curriculumLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        curriculumLabel.setText("Curriculum:");

        gradeLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        gradeLabel.setText("Grade:");

        emailLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        emailLabel.setText("Email:");

        parentNameLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentNameLabel.setText("Parent Name:");

        parentEmailLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentEmailLabel.setText("Parent Email:");

        parentPhoneLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        parentPhoneLabel.setText("Parent Phone:");

        addressLabel.setFont(new java.awt.Font("Microsoft Himalaya", 0, 18)); // NOI18N
        addressLabel.setText("Address:");

        jLabel1.setFont(new java.awt.Font("Microsoft Himalaya", 1, 24)); // NOI18N
        jLabel1.setText("STUDENT INFORMATION");

        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        age.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });

        schoolName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        schoolName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolNameActionPerformed(evt);
            }
        });

        curriculum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        curriculum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curriculumActionPerformed(evt);
            }
        });

        grade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeActionPerformed(evt);
            }
        });

        email.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        parentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        parentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentNameActionPerformed(evt);
            }
        });

        parentEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        parentEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentEmailActionPerformed(evt);
            }
        });

        parentPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        parentPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentPhoneActionPerformed(evt);
            }
        });

        address.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(0, 0, 0));
        exit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("DELETE");
        exit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        DONE.setBackground(new java.awt.Color(0, 0, 0));
        DONE.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DONE.setForeground(new java.awt.Color(255, 255, 255));
        DONE.setText("DONE");
        DONE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DONE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DONEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(ageLabel)
                    .addComponent(schoolNameLabel)
                    .addComponent(curriculumLabel)
                    .addComponent(gradeLabel)
                    .addComponent(emailLabel)
                    .addComponent(parentNameLabel)
                    .addComponent(parentEmailLabel)
                    .addComponent(parentPhoneLabel)
                    .addComponent(addressLabel))
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parentName, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curriculum, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schoolName, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DONE, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(165, 165, 165))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(DONE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolNameLabel)
                    .addComponent(schoolName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(curriculumLabel)
                    .addComponent(curriculum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gradeLabel)
                    .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentNameLabel)
                    .addComponent(parentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentEmailLabel)
                    .addComponent(parentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentPhoneLabel)
                    .addComponent(parentPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    private void schoolNameActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void curriculumActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void gradeActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void parentNameActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void parentEmailActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void parentPhoneActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    //When the delete button is pressed,
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        try {
            JOptionPane.showMessageDialog(this, "Delete edits?");
            this.setVisible(false); //student information editor page closed
            stu= new studentInfo(conn);
            stu.setVisible(true); //student information page opened
        } catch (SQLException ex) {
            Logger.getLogger(studentInfoEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                    

    //When the done button is pressed,
    private void DONEActionPerformed(java.awt.event.ActionEvent evt) {                                     
        //retrieve all info that has been entered into the JTextFields
        String studentName = name.getText();
        int studentAge = Integer.parseInt(age.getText());
        String studentSchoolName = schoolName.getText();
        String studentCurriculum = curriculum.getText();
        String studentGrade = grade.getText();
        String studentEmail = email.getText();
        String parentNameValue = parentName.getText();
        String parentEmailValue = parentEmail.getText();
        String parentPhoneValue = parentPhone.getText();
        String studentAddress = address.getText();
        try {
            //create a SQL query updating the database with the currently entered information
            String query = "UPDATE studentInfo SET sName=?, age=?, schoolName=?, curriculum=?, grade=?, email=?, pName=?, pEmail=?, pPhone=?, address=? WHERE sName=?";

            try (
                PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, studentName);
                pstmt.setInt(2, studentAge);
                pstmt.setString(3, studentSchoolName);
                pstmt.setString(4, studentCurriculum);
                pstmt.setString(5, studentGrade);
                pstmt.setString(6, studentEmail);
                pstmt.setString(7, parentNameValue);
                pstmt.setString(8, parentEmailValue);
                pstmt.setString(9, parentPhoneValue);
                pstmt.setString(10, studentAddress);
                pstmt.setString(11, selectedStudentName);
                pstmt.executeUpdate();
            }

            //updating the sName in the tasks table
            query = "UPDATE tasks SET sName=? WHERE sName=?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, studentName);
                pstmt.setString(2, selectedStudentName);
                pstmt.executeUpdate(); // Execute the update operation
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error changing student name in tasks database table: " + ex.getMessage());
            }
            
            //updating the sName in the meetingRecords database
            query = "UPDATE meetingRecords SET sName=? WHERE sName=?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, studentName);
                pstmt.setString(2, selectedStudentName);
                pstmt.executeUpdate(); // Execute the update operation
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error changing student name in meetingRecords database table: " + ex.getMessage());
            }
            
            //updating the sName in the files database
            query = "UPDATE files SET sName=? WHERE sName=?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, studentName);
                pstmt.setString(2, selectedStudentName);
                pstmt.executeUpdate(); // Execute the update operation
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error changing student name in files database table: " + ex.getMessage());
            }
            
            //updating the sName in the fees database
            query = "UPDATE fees SET sName=? WHERE sName=?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, studentName);
                pstmt.setString(2, selectedStudentName);
                pstmt.executeUpdate(); // Execute the update operation
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error changing student name in fees database table: " + ex.getMessage());
            }
            
            JOptionPane.showMessageDialog(this, "Details have been updated");
            
            this.setVisible(false); //student information editor page closed after updating the database
            stu= new studentInfo(conn);
            stu.setVisible(true); //student information page opened
        } catch (SQLException ex) {
            System.out.println("Error updating student information: " + ex.getMessage());
        }
    }                                    

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    public void setStudentDetails(String studentName, int studentAge, String schoolName, String curriculum, String grade, String email, String parentName, String parentEmail, String parentPhone, String address)
    {
        //set student details into the JTextFields on the student information editor page
        if (studentName != null) {
            this.name.setText(studentName);
        } else {
            this.name.setText("");
        }
        
        if (studentAge!=0) {
            this.age.setText(String.valueOf(studentAge));
        } else {
            this.age.setText("0");
        }
        
        if (schoolName != null) {
            this.schoolName.setText(schoolName);
        } else {
            this.schoolName.setText("");
        }
        
        if (curriculum != null) {
            this.curriculum.setText(curriculum);
        } else {
            this.curriculum.setText("");
        }
        
        if (grade != null) {
            this.grade.setText(grade);
        } else {
            this.grade.setText("");
        }
        
        if (email != null) {
            this.email.setText(email);
        } else {
            this.email.setText("");
        }
        
        if (parentName != null) {
            this.parentName.setText(parentName);
        } else {
            this.parentName.setText("");
        }
        
        if (parentEmail != null) {
            this.parentEmail.setText(parentEmail);
        } else {
            this.parentEmail.setText("");
        }
        
        if (parentPhone != null) {
            this.parentPhone.setText(parentPhone);
        } else {
            this.parentPhone.setText("");
        }
        
        if (address != null) {
            this.address.setText(address);
        } else {
            this.address.setText("");
        }
    }
        
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentInfoEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentInfoEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentInfoEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentInfoEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>*/

    // Variables declaration - do not modify                     
    private javax.swing.JButton DONE;
    private javax.swing.JTextField address;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField age;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField curriculum;
    private javax.swing.JLabel curriculumLabel;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JButton exit;
    private javax.swing.JTextField grade;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField name;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField parentEmail;
    private javax.swing.JLabel parentEmailLabel;
    private javax.swing.JTextField parentName;
    private javax.swing.JLabel parentNameLabel;
    private javax.swing.JTextField parentPhone;
    private javax.swing.JLabel parentPhoneLabel;
    private javax.swing.JTextField schoolName;
    private javax.swing.JLabel schoolNameLabel;
    // End of variables declaration                   
}